name: Test
on:
  push:
    branches:
      - 'main'
    tags-ignore:
      - '*'
  pull_request:
  schedule:
    - cron: "5 15 * * *"

jobs:
  test:
    env:
      PLUGIN_NAME: FroshPlatformBunnycdnMediaStorage
    strategy:
      fail-fast: false
      matrix:
        version: [
          "v6.5.0.0",
          "v6.5.1.0",
          "v6.5.2.1",
          "v6.5.3.3",
          "v6.5.4.1",
          "v6.5.5.2",
          "v6.5.6.1",
          "v6.5.7.4",
          "v6.5.8.2",
          "6.5.x",
          "v6.6.0.3",
          "trunk"
        ]
        php: ["8.2"]
        include:
          - version: "trunk"
            php: "8.3"
    runs-on: ubuntu-latest
    steps:
      - name: Setup Shopware
        uses: shopware/setup-shopware@main
        with:
          shopware-version: ${{ matrix.version }}
          php-version: ${{ matrix.php }}
          php-extensions: pcov
          install: true

      - name: Info
        run: |
          php bin/console -V
          mysql -V
          php -v

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ${{ github.workspace }}/custom/plugins/${{ env.PLUGIN_NAME }}

      - name: PHPStan
        working-directory: ${{ github.workspace }}
        run: |
          composer require frosh/platform-bunnycdn-media-storage
          ${{ github.workspace }}/vendor/bin/phpstan analyse -c ${{ github.workspace }}/custom/plugins/${{ env.PLUGIN_NAME }}/phpstan.neon

      - name: Run Tests
        working-directory: ${{ github.workspace }}/custom/plugins/${{ env.PLUGIN_NAME }}
        run: |
          php -d pcov.enabled=1 ${{ github.workspace }}/vendor/bin/phpunit --coverage-clover clover.xml --testsuite Unit

      - uses: codecov/codecov-action@v3
        if: matrix.version == 'trunk' && matrix.php == '8.3'
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./clover.xml
          root_dir: ${{ github.workspace }}/custom/plugins/${{ env.PLUGIN_NAME }}
          working-directory: ${{ github.workspace }}/custom/plugins/${{ env.PLUGIN_NAME }}